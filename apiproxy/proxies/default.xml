<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
    <RouteRule name="Firestore">
        <Condition>(proxy.pathsuffix MatchesPath "/fs")</Condition>
        <TargetEndpoint>Firestore</TargetEndpoint>
    </RouteRule>
    <RouteRule name="BigQuery">
        <Condition>(proxy.pathsuffix MatchesPath "/bq")</Condition>
        <TargetEndpoint>BigQuery</TargetEndpoint>
    </RouteRule>
    <RouteRule name="PubSub">
        <Condition>(proxy.pathsuffix MatchesPath "/ps")</Condition>
        <TargetEndpoint>PubSub</TargetEndpoint>
    </RouteRule>
    <RouteRule name="noroute"/>
    <PreFlow name="PreFlow">
        <Request/>
        <Response/>
    </PreFlow>
    <Flows>
        <Flow name="Firestore-Native">
            <Description/>
            <Request>
                <Step>
                    <Name>KVLookup-FSN-SA-Key</Name>
                </Step>
                <Step>
                    <Name>AMGCPScopesFirestore</Name>
                </Step>
                <Step>
                    <Name>FCGetGCPToken</Name>
                </Step>
                <Step>
                    <Name>AMsetHeaderPayloadFirestore</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/fs") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="BigQuery">
            <Description/>
            <Request>
                <Step>
                    <Name>KVLookup-BQ-SA-Key</Name>
                </Step>
                <Step>
                    <Name>AMGCPScopesBQ</Name>
                </Step>
                <Step>
                    <Name>FCGetGCPToken</Name>
                </Step>
                <Step>
                    <Name>AMsetHeaderPayload.BQ</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/bq") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="Logging">
            <Description/>
            <Request>
                <Step>
                    <Name>KVLookup-LOG-SA-Key</Name>
                </Step>
                <Step>
                    <Name>AMGCPScopesLOG</Name>
                </Step>
                <Step>
                    <Name>FCGetGCPToken</Name>
                </Step>
                <Step>
                    <Name>AMsetHeaderPayload.LOG</Name>
                </Step>
                <Step>
                    <Name>JS-SetLoggingRecord</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Name>AM.setPayload.LOG</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/log") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="PubSub">
            <Description/>
            <Request>
                <Step>
                    <Name>KVLookup-PubSub-SA-Key</Name>
                </Step>
                <Step>
                    <Name>AMGCPScopesPubSub</Name>
                </Step>
                <Step>
                    <Name>FCGetGCPToken</Name>
                </Step>
                <Step>
                    <Name>AMsetHeaderPayloadPubSub</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/ps") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="SecretManager">
            <Description/>
            <Request>
                <Step>
                    <Name>KVLookup-SM-SA-Key</Name>
                </Step>
                <Step>
                    <Name>AMGCPScopesSM</Name>
                </Step>
                <Step>
                    <Name>FCGetGCPToken</Name>
                </Step>
                <Step>
                    <Name>AMsetHeaderPayload.SM</Name>
                </Step>
                <Step>
                    <Name>SC-getSecret</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Name>EV-getSecret</Name>
                </Step>
                <Step>
                    <Name>AM-decodeSecret</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/sm") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="fallback 404">
            <Request>
                <Step>
                    <Name>RF-404</Name>
                </Step>
            </Request>
        </Flow>
    </Flows>
    <PostFlow name="PostFlow">
        <Request/>
        <Response/>
    </PostFlow>
    <PostClientFlow>
        <Request/>
        <Response>
            <Step>
                <Name>SC.SendLogs</Name>
                <Condition>(proxy.pathsuffix MatchesPath "/log") and (request.verb = "GET")</Condition>
            </Step>
        </Response>
    </PostClientFlow>
    <HTTPProxyConnection>
        <BasePath>/v1/gcpservice</BasePath>
    </HTTPProxyConnection>
</ProxyEndpoint>